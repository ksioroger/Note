package interfaces;

import controle.ControleTamanhoTexto;
import entidade.Senha;
import entidade.Usuário;
import entidade.Visão;
import java.awt.Color;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRootPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Cassiano Rogério
 */

//Permite visualizar os dados do cadastro selecionado
public class Buscar extends javax.swing.JDialog {
    Vector<Visão<String>> senhas_cadastradas;
    Vector<Visão<String>> visões = new Vector<Visão<String>> ();
    Usuário userLogado;
    java.awt.Frame pai;
    
    /** Creates new form Adicionar
     * @param parent
     * @param modal
     * @param user
     */
    public Buscar(java.awt.Frame parent, boolean modal, Usuário user) {
        super(parent, modal);
        pai = parent;
        userLogado = user;
        
        URL url = this.getClass().getResource("/images/key 20x20.png");
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url);
        this.setIconImage(iconeTitulo);
        initComponents();
        //Foca no TextFild de entrada de dados
        jTextFieldDados_para_buscar.requestFocus();
        //Quando for dado um clique duplo na lista de cadastros abre a janela de visualização do cadastro clicado duplamente
        cliqueDuplo();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Fundo = new javax.swing.JPanel();
        jPanelFundo = new javax.swing.JPanel();
        jPanelEtiquetas = new javax.swing.JPanel();
        jComboBoxUsuário_Ou_Nome = new javax.swing.JComboBox<>();
        jPanelTextos = new javax.swing.JPanel();
        jTextFieldDados_para_buscar = new javax.swing.JTextField();
        jPanelBotões = new javax.swing.JPanel();
        jButtonCancelar = new javax.swing.JButton();
        jButtonVisualizar = new javax.swing.JButton();
        jButtonBuscar = new javax.swing.JButton();
        jButtonExcluir = new javax.swing.JButton();
        jButtonAtualizar = new javax.swing.JButton();
        jScrollPaneListagemCadastroRolagem = new javax.swing.JScrollPane();
        jListCadastrosEncontrados = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Buscar senha cadastrada");
        setAlwaysOnTop(true);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jComboBoxUsuário_Ou_Nome.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Usuário", "Nome" }));

        javax.swing.GroupLayout jPanelEtiquetasLayout = new javax.swing.GroupLayout(jPanelEtiquetas);
        jPanelEtiquetas.setLayout(jPanelEtiquetasLayout);
        jPanelEtiquetasLayout.setHorizontalGroup(
            jPanelEtiquetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtiquetasLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jComboBoxUsuário_Ou_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelEtiquetasLayout.setVerticalGroup(
            jPanelEtiquetasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelEtiquetasLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jComboBoxUsuário_Ou_Nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        jTextFieldDados_para_buscar.setDocument( new ControleTamanhoTexto(50) );
        jTextFieldDados_para_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDados_para_buscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTextosLayout = new javax.swing.GroupLayout(jPanelTextos);
        jPanelTextos.setLayout(jPanelTextosLayout);
        jPanelTextosLayout.setHorizontalGroup(
            jPanelTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTextosLayout.createSequentialGroup()
                .addComponent(jTextFieldDados_para_buscar)
                .addContainerGap())
        );
        jPanelTextosLayout.setVerticalGroup(
            jPanelTextosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTextosLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jTextFieldDados_para_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonVisualizar.setMnemonic('v');
        jButtonVisualizar.setText("Visualizar");
        jButtonVisualizar.setEnabled(false);
        jButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualizarActionPerformed(evt);
            }
        });

        jButtonBuscar.setMnemonic('b');
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jButtonExcluir.setMnemonic('e');
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setEnabled(false);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        jButtonAtualizar.setMnemonic('a');
        jButtonAtualizar.setText("Atualizar");
        jButtonAtualizar.setToolTipText("");
        jButtonAtualizar.setEnabled(false);
        jButtonAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtualizarActionPerformed(evt);
            }
        });

        jListCadastrosEncontrados.setOpaque(false);

        jListCadastrosEncontrados.setBackground(new Color(0, 0, 0, 0));

        jListCadastrosEncontrados.setForeground(Color.WHITE);
        jListCadastrosEncontrados.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jListCadastrosEncontrados.setForeground(new java.awt.Color(51, 51, 51));
        jListCadastrosEncontrados.setModel(new DefaultComboBoxModel(visões));
        jListCadastrosEncontrados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPaneListagemCadastroRolagem.setViewportView(jListCadastrosEncontrados);

        javax.swing.GroupLayout jPanelBotõesLayout = new javax.swing.GroupLayout(jPanelBotões);
        jPanelBotões.setLayout(jPanelBotõesLayout);
        jPanelBotõesLayout.setHorizontalGroup(
            jPanelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBotõesLayout.createSequentialGroup()
                .addGroup(jPanelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPaneListagemCadastroRolagem)
                    .addGroup(jPanelBotõesLayout.createSequentialGroup()
                        .addComponent(jButtonVisualizar)
                        .addGap(6, 6, 6)
                        .addComponent(jButtonAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonExcluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonBuscar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar)))
                .addGap(0, 0, 0))
        );
        jPanelBotõesLayout.setVerticalGroup(
            jPanelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotõesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneListagemCadastroRolagem, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBotõesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonBuscar)
                    .addComponent(jButtonExcluir)
                    .addComponent(jButtonAtualizar)
                    .addComponent(jButtonVisualizar))
                .addGap(5, 5, 5))
        );

        this.dispose();

        javax.swing.GroupLayout jPanelFundoLayout = new javax.swing.GroupLayout(jPanelFundo);
        jPanelFundo.setLayout(jPanelFundoLayout);
        jPanelFundoLayout.setHorizontalGroup(
            jPanelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFundoLayout.createSequentialGroup()
                .addComponent(jPanelEtiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanelTextos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelFundoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanelBotões, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelFundoLayout.setVerticalGroup(
            jPanelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFundoLayout.createSequentialGroup()
                .addGroup(jPanelFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTextos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanelEtiquetas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jPanelBotões, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout FundoLayout = new javax.swing.GroupLayout(Fundo);
        Fundo.setLayout(FundoLayout);
        FundoLayout.setHorizontalGroup(
            FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        FundoLayout.setVerticalGroup(
            FundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FundoLayout.createSequentialGroup()
                .addComponent(jPanelFundo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        getContentPane().add(Fundo);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        //Fecha a janela
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualizarActionPerformed
        // TODO add your handling code here:
        //Solicita a criação da janela de visualização do cadastro selecionado
        visualizar();
    }//GEN-LAST:event_jButtonVisualizarActionPerformed

    private void jTextFieldDados_para_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDados_para_buscarActionPerformed
        // TODO add your handling code here:
        //Quando estiver no campo de texto da senha permite confirmar usando a tecla enter
        jButtonBuscar.doClick();
    }//GEN-LAST:event_jTextFieldDados_para_buscarActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        // TODO add your handling code here:
        int controle_Ativação_Botões;
        //Limpa as visões
        visões.clear();
        //Checa se a consulta retorna algum valor, caso não encontre retorna -1, caso contrário a quantidade encontrada
        controle_Ativação_Botões = buscar();
        //Se a busca retornar algo, plota no jlist e ativa os botões de função
        if (controle_Ativação_Botões >= 0) {
            //Imprimir na janela o cadastro da senha selecionado
            jListCadastrosEncontrados.setModel(new DefaultComboBoxModel(visões));
            jButtonAtualizar.setEnabled(true);
            jButtonVisualizar.setEnabled(true);
            jButtonExcluir.setEnabled(true);
        }
        //Caso a busca na retornar nada, limpa o Jlist, desativa os botões de função e envia uma mensagem para o usuário
        else{
            visões.clear();
            jListCadastrosEncontrados.setModel(new DefaultComboBoxModel(visões));
            jButtonAtualizar.setEnabled(false);
            jButtonVisualizar.setEnabled(false);
            jButtonExcluir.setEnabled(false);
            JOptionPane.showMessageDialog(this, "Nenhuma senha foi encontrada!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
        //Solicita a criação da janela de exclusão do cadastro selecionado
        excluir();
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtualizarActionPerformed
        // TODO add your handling code here:
        //Solicita a criação da janela de atualização do cadastro selecionado
        atualizar();
    }//GEN-LAST:event_jButtonAtualizarActionPerformed

    //Permite abrir a tela de visualização com click duplo no item
    private void cliqueDuplo(){
        jListCadastrosEncontrados.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                if (evt.getClickCount() == 2){
                    visualizar();
                }
            }          
        });
    }
    //Cria a janela de visualização de cadastro
    private void visualizar(){
        //Capturar o item selecionado
       int item = jListCadastrosEncontrados.getSelectedIndex();
        
        //checar se algum item foi selecionado
        if(jListCadastrosEncontrados.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(this, "Por gentileza selecione uma senha para visualizar", "ERRO",
            JOptionPane.ERROR_MESSAGE);
        } else {
            //Criar uma nova janela, para visualizar a senha que foi selecionada
            Visualizar visualizardialogo;
            visualizardialogo = new Visualizar(pai,true,item, userLogado, visões);
            visualizardialogo.setLocationRelativeTo(null);
            visualizardialogo.setResizable(false);
            visualizardialogo.setVisible(true);
        }
    }
    
    //Cria a janela de atualização de cadastro
    private void atualizar(){
        //Capturar o item selecionado
        int item = jListCadastrosEncontrados.getSelectedIndex();
        //checar se algum item foi selecionado
        if(jListCadastrosEncontrados.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(this, "Por gentileza selecione uma senha para atualizar", "ERRO",
            JOptionPane.ERROR_MESSAGE);
        } else {
            //Criar uma nova janela, para visualizar a senha que foi selecionada
            Atualizar atualizardialogo = new Atualizar(pai,true,item, userLogado, visões);
            atualizardialogo.setLocationRelativeTo(null);
            atualizardialogo.setResizable(false);
            atualizardialogo.setVisible(true);
        }
    }
    
    //Cria a janela de exclusão do cadastro selecionado
    private void excluir(){
        //Capta qual foi o intem selecionado 
        int item = jListCadastrosEncontrados.getSelectedIndex();
        if(jListCadastrosEncontrados.getSelectedIndex()<0){
            JOptionPane.showMessageDialog(this, "Por gentileza selecione uma senha para excluir", "ERRO",
            JOptionPane.ERROR_MESSAGE);
        } else {
            //Criar uma nova janela, para visualizar dados
            Excluir excluirdialogo = new Excluir(pai,true,item, userLogado, visões);
            excluirdialogo.setLocationRelativeTo(null);
            excluirdialogo.setResizable(false);
            excluirdialogo.setVisible(true);
        }
    }
    
    //Permitir fechar a Janela com a tecla Esc
    @Override
    protected JRootPane createRootPane() {
        JRootPane rootPane = new JRootPane();
        KeyStroke stroke = KeyStroke.getKeyStroke("ESCAPE");
        Action actionListener;
        actionListener = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) { 
                setVisible(false);
            } 
        };
        InputMap inputMap = rootPane.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        inputMap.put(stroke, "ESCAPE");
        rootPane.getActionMap().put("ESCAPE", actionListener);
        return rootPane;
    }
    
    /*  Verifica qual foi o cadastro seleciona e imprime na janela
    *   Se nenhum campo for encontrado retorna -1, caso contrário a quantidade de campos encontrados
    */
    private int buscar(){
        String usuário_ou_Nome_Digitado;
        int o_Que_Buscar,controle_Ativação_Botões;
        
        controle_Ativação_Botões  = -1;
        o_Que_Buscar = jComboBoxUsuário_Ou_Nome.getSelectedIndex();
        usuário_ou_Nome_Digitado = jTextFieldDados_para_buscar.getText();
        
        //Capta os dados dos cadastros de senhas armazenados no banco
        senhas_cadastradas = Senha.getVisõesParaBusca(userLogado.getID());
        
        //Checar cada uma das senhas do usuário ativo no sistema
        for (Visão<String> senhas : senhas_cadastradas) {
            //Caso o_Que_Buscar==0, deverá realizar a busca com base no Usuário
            if (o_Que_Buscar==0) {
                //Checa se algum dos dados buscados existem
                if (senhas.getUser().contains(usuário_ou_Nome_Digitado)) {
                    //Caso algum campo combine irá adiciona-lo no vetor de resultados
                    visões.addElement(senhas);
                    controle_Ativação_Botões  += 1;
                }
            }
            //Caso o_Que_Buscar==1, deverá realizar a busca com base no Nome
            else if (o_Que_Buscar==1) {
                //Checa se algum dos dados buscados existem
                if (senhas.getChave().contains(usuário_ou_Nome_Digitado)) {
                    //Caso algum campo combine irá adiciona-lo no vetor de resultados
                    visões.addElement(senhas);
                    controle_Ativação_Botões  += 1;
                }
            }
        }
    return controle_Ativação_Botões;
    } 
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Buscar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Usuário user = null;
                Buscar dialog = new Buscar(new javax.swing.JFrame(), true, user);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Fundo;
    private javax.swing.JButton jButtonAtualizar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JButton jButtonVisualizar;
    private javax.swing.JComboBox<String> jComboBoxUsuário_Ou_Nome;
    private javax.swing.JList<String> jListCadastrosEncontrados;
    private javax.swing.JPanel jPanelBotões;
    private javax.swing.JPanel jPanelEtiquetas;
    private javax.swing.JPanel jPanelFundo;
    private javax.swing.JPanel jPanelTextos;
    private javax.swing.JScrollPane jScrollPaneListagemCadastroRolagem;
    private javax.swing.JTextField jTextFieldDados_para_buscar;
    // End of variables declaration//GEN-END:variables

}
